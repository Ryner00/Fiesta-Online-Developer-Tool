#pragma once
#include "SHN/SHNStruct.h"
enum LinkIndex : __int32
{
	LINK_HATACC = 0x0,
	LINK_HAIR = 0x1,
	LINK_FACE = 0x2,
	LINK_EYE = 0x3,
	LINK_MOUTH = 0x4,
	LINK_CHEST = 0x5,
	LINK_CHEST_R = 0x6,
	LINK_BACK = 0x7,
	LINK_TOPLINK = 0x8,
	LINK_LEFTSHOULDER = 0x9,
	LINK_RIGHTSHOULDER = 0xA,
	LINK_LEFTHAND = 0xB,
	LINK_RIGHTHAND = 0xC,
	LINK_LEFTBRACELET = 0xD,
	LINK_RIGHTBRACELET = 0xE,
	LINK_BELT = 0xF,
	LINK_TAIL = 0x10,
	LINK_LEFTSHOESACC = 0x11,
	LINK_RIGHTSHOESACC = 0x12,
	LINK_LEFTUPPERARM = 0x13,
	LINK_RIGHTUPPERARM = 0x14,
	LINK_LEFTTHIGH = 0x15,
	LINK_RIGHTTHIGH = 0x16,
	LINK_LEFTCALF = 0x17,
	LINK_RIGHTCALF = 0x18,
	LINK_WORLD = 0x19,
	LINK_WORLD_COS = 0x1A,
	LINK_NUM = 0x1B,
};

class AnimationEventCodes
{
public:
	enum Code1
	{
		INVALID_CODE1 = 0xFFFFFFFF,
		STAND = 0x186A0,
		REGEN = 0x1ADB0,
		MOVE = 0x30D40,
		ATTACK = 0x493E0,
		DAMAGE = 0x61A80,
		DIE = 0x7A120,
		SKILL = 0x927C0,
		SKILLCAST = 0xAAE60,
		EMOTICON = 0xC3500,
		ETC = 0xDBBA0,
		DIRECTION = 0xDE2B0,
	};

	enum Code2
	{
		INVALID_CODE2 = 0xFFFFFFFF,
		NONE2 = 0x0,
		NORMALSTAND = 0x3E8,
		COMBATSTAND = 0x7D0,
		SKILLSTAND_1 = 0xBB8,
		SKILLSTAND_2 = 0xFA0,
		SKILLSTAND_3 = 0x1388,
		WALK = 0x3E8,
		RUN = 0x7D0,
		ATTACK1_1 = 0x3E8,
		ATTACK1_2 = 0x7D0,
		ATTACK1_3 = 0xBB8,
		ATTACK2_1 = 0x5DC,
		ATTACK2_2 = 0x9C4,
		ATTACK2_3 = 0xDAC,
		ATTACK_CRI1_1 = 0x1B58,
		ATTACK_CRI1_2 = 0x1F40,
		DAMAGE1 = 0x3E8,
		DAMAGE_CRITICAL1 = 0x7D0,
		DIE1 = 0x3E8,
		ATKSKILL1 = 0x3E8,
		ATKSKILL2 = 0x5DC,
		ATKSKILL3 = 0x7D0,
		ATKSKILL4 = 0x9C4,
		ATKSKILL5 = 0xBB8,
		ATKSKILL6 = 0xDAC,
		ATKSKILL7 = 0xFA0,
		ATKSKILL8 = 0x1194,
		ATKSKILL9 = 0x1388,
		ATKSKILL10 = 0x157C,
		ATKSKILL11 = 0x1770,
		ATKSKILL12 = 0x1964,
		ATKSKILL13 = 0x1B58,
		ATKSKILL14 = 0x1D4C,
		ATKSKILL15 = 0x1F40,
		ATKMULTSKILL1 = 0x2134,
		DEFSKILL1 = 0x2328,
		ATKSPCLSKILL1 = 0x251C,
		COMBO1 = 0x3E8,
		COMBO2 = 0x7D0,
		COMBO3 = 0xBB8,
		COMBO4 = 0xFA0,
		COMBO5 = 0x1388,
		COMBO6 = 0x1770,
		HI1 = 0x3E8,
		LOVE1 = 0x7D0,
		SMILE1 = 0xBB8,
		CRY1 = 0xFA0,
		DANCE1 = 0x1388,
		AUTOACTION = 0x3E8,
		PICKUP = 0x7D0,
		CASTING = 0xBB8,
		GREETING = 0xBB8,
		DOOR = 0x1770,
		DIRECTION_BEGIN = 0x3E8,
		DIRECTION_END = 0x7D0,
		DIRECTION_LOOP = 0xBB8,
	};
	enum Code3
	{
		INVALID_CODE3 = 0xFFFFFFFF,
		NONE3 = 0x0,
		ONEHANDSWORD = 0xA,
		TWOHANDSWORD = 0x14,
		BOW = 0x1E,
		CROSSBOW = 0x28,
		ONEHANDSTAFF = 0x32,
		TWOHANDSTAFF = 0x3C,
		TWOHANDAXE = 0x46,
		INVINCIBLEHAMMER = 0x50,
		DUALSTYLEWEAPON = 0x5A,
		OPEN = 0x14,
		CLOSE = 0x1E,
	};

	static Code3 GetWeaponAnimationType(ItemInfo* info)
	{
		if (!info)
			return Code3::NONE3;
		switch (info->WeaponType)
		{
		case WT_SWORD:
		case WT_AXE:
		case WT_MACE:
		case WT_SPIKE:
		case WT_FIST:
		case WT_BODY:
		case WT_STONE:
		case WT_HAMMER:
			return Code3::ONEHANDSWORD;
		case WT_TSWORD:
		case WT_DSWORD:
		case WT_BLADE:
			return Code3::TWOHANDSWORD;
		case WT_BOW:
			return Code3::BOW;
		case WT_CROSSBOW:
			return Code3::CROSSBOW;
		case WT_STAFF:
		case WT_WAND:
			return Code3::TWOHANDSTAFF;
		case WT_INVINCIBLEHAMMER:
			return Code3::INVINCIBLEHAMMER;
		case WT_CLAW:
			return Code3::DUALSTYLEWEAPON;

		default:
			return Code3::NONE3;
		}
	}
};